name: Fuzz

on:
  workflow_dispatch:

jobs:
  fuzz-targets:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.fuzz-targets.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz
      - name: Detect targets
        id: fuzz-targets
        # jq lines to array: https://github.com/stedolan/jq/issues/563
        run: |
          cargo fuzz list > fuzz_targets.txt
          TARGETS=$(jq --raw-input --compact-output --slurp 'split("\n") | map(select(. != ""))' fuzz_targets.txt)
          MATRIX=$(echo "{\"targets\":${TARGETS}}")
          echo "Detected targets: ${TARGETS}"
          echo "Constructed matrix: ${MATRIX}"
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT

  fuzz:
    needs: fuzz-targets
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.fuzz-targets.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz
      - name: "Fuzz-target: ${{ matrix.targets }}"
        # -max_total_time=18000 (5h)
        run: cargo fuzz run ${{ matrix.targets }} -- -max_total_time=18000 -print_final_stats
